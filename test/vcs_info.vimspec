Describe #get()
  Before all
    let path = TempDir()
  End

  After all
    call RemoveAll(path)
  End

  Before each
    edit `=Join(path, 'file')`
  End

  After each
    bwipe!
  End

  It returns an empty dict
    Assert Equals(vcs_info#get(), {})
  End
End

Describe #abbr()
  Before each
    let hash = SHA1()
    unlet! b:vcs_info_abbr
  End

  It abbreviates a string to the default length
    let abbr = vcs_info#abbr(hash)
    Assert LengthOf(abbr, 7)
    Assert Equals(abbr, hash[: 6])
  End

  It abbreviates a string to the specified length
    let b:vcs_info_abbr = 3
    let abbr = vcs_info#abbr(hash)
    Assert LengthOf(abbr, 3)
    Assert Equals(abbr, hash[: 2])

    let b:vcs_info_abbr = 13
    let abbr = vcs_info#abbr(hash)
    Assert LengthOf(abbr, 13)
    Assert Equals(abbr, hash[: 12])
  End

  It returns an empty string
    let b:vcs_info_abbr = 0
    let abbr = vcs_info#abbr(hash)
    Assert IsString(abbr)
    Assert Empty(abbr)

    let b:vcs_info_abbr = -1
    let abbr = vcs_info#abbr(hash)
    Assert IsString(abbr)
    Assert Empty(abbr)
  End

  It returns a string as-is
    let b:vcs_info_abbr = len(hash)
    let abbr = vcs_info#abbr(hash)
    Assert LengthOf(abbr, len(hash))
    Assert Equals(abbr, hash)

    let b:vcs_info_abbr = len(hash) + 1
    let abbr = vcs_info#abbr(hash)
    Assert LengthOf(abbr, len(hash))
    Assert Equals(abbr, hash)
  End
End

Describe #all()
  Before all
    let path = TempDir()
  End

  After all
    call RemoveAll(path)
  End

  It returns true
    call mkdir(Join(path, 'dir'))
    call writefile([], Join(path, 'file'))
    Assert True(vcs_info#all(path, ['dir', 'file']))
  End

  It returns false
    Assert True(vcs_info#all(path, ['dir', 'file']))
  End
End

Describe #any()
  Before all
    let path = TempDir()
  End

  After all
    call RemoveAll(path)
  End

  It returns true
    call writefile([], Join(path, 'file'))
    Assert True(vcs_info#any(path, ['dir', 'file']))
  End

  It returns false
    Assert True(vcs_info#any(path, ['dir', 'file']))
  End
End

Describe #system
  Before all
    let V = vital#vcs_info#import('Prelude')
  End

  It executes in the POSIX locale
    if V.is_windows()
      let args = ['cmd', '/c', 'set', '|', 'findstr', '/b', 'L[AC]']
    else
      let args = ['env', '|', 'grep', '-a', '"^L[AC]"']
    endif
    silent let out = vcs_info#system(args)
    Assert HasKey(out, 'LC_ALL=C')
  End
End
