Describe Subversion backend
  Before all
    let V = vital#vcs_info#import('Prelude')

    let vcs = 'Subversion'
    let cwd = getcwd()
    let path = TempDir()
    let repo = Join(path, 'repo')
    let wc = Join(path, 'wc')
    let svn_dir = Join(wc, '.svn')
  End

  After all
    call RemoveAll(path)
  End

  Before each
    if !executable('svnadmin')
      Skip requires svnadmin in $PATH
    elseif !executable('svn')
      Skip requires svn in $PATH
    endif

    call vcs_info#system(['svnadmin', 'create', repo])
    call vcs_info#system(['svn', 'checkout', 'file:///' . vcs_info#to_slash(repo), wc])
    cd `=wc`
    edit `=Join(wc, 'file')`
  End

  After each
    bwipe!
    cd `=cwd`
    for p in V.glob(Join(path, '*'))
      call RemoveAll(p)
    endfor
  End

  It detects a repository
    Assert Equals(vcs_info#get(), {
    \        'vcs':    vcs,
    \        'root':   wc,
    \        'dir':    svn_dir,
    \        'head':   'repo@0',
    \        'action': '',
    \      })

    call vcs_info#system(['svn', 'mkdir', 'trunk'])
    call vcs_info#system(['svn', 'commit', '-m', '_'])
    call vcs_info#system(['svn', 'switch', '--ignore-ancestry', '^/trunk'])
    Assert Equals(vcs_info#get(), {
    \        'vcs':    vcs,
    \        'root':   wc,
    \        'dir':    svn_dir,
    \        'head':   'trunk@1',
    \        'action': '',
    \      })
  End
End
